#!/bin/bash

# =================================================================
# Gradle 项目打包和分发脚本
# 脚本作者：AI Assistant
# 适用平台：macOS / Linux
# -----------------------------------------------------------------
# 脚本功能：
# 1. 确保所有项目依赖都已下载。
# 2. 将项目源码和本地 Gradle 缓存一并打包，方便离线分发。
# =================================================================

# 检查当前目录是否为 Gradle 项目
if [ ! -f "gradlew" ]; then
    echo "错误：当前目录不是一个 Gradle 项目的根目录。"
    exit 1
fi

# -----------------------------------------------------------------
# 1. 运行 Gradle Build，确保所有依赖都已下载到本地缓存
# -----------------------------------------------------------------
echo "正在执行 './gradlew build' 以确保所有依赖都已缓存..."
./gradlew build

if [ $? -ne 0 ]; then
    echo "错误：Gradle 构建失败，请检查项目配置。"
    exit 1
fi

echo "Gradle 构建成功，所有依赖已缓存。"

# -----------------------------------------------------------------
# 2. 确定 Gradle 缓存目录
# -----------------------------------------------------------------
echo "正在确定 Gradle 缓存目录..."
GRADLE_CACHE_DIR="$HOME/.gradle/caches"

if [ ! -d "$GRADLE_CACHE_DIR" ]; then
    echo "错误：未找到 Gradle 缓存目录 '$GRADLE_CACHE_DIR'。"
    exit 1
fi

echo "Gradle 缓存目录已找到：$GRADLE_CACHE_DIR"

# -----------------------------------------------------------------
# 3. 排除不必要的打包文件
# -----------------------------------------------------------------
# 定义需要排除的目录和文件，可以根据项目情况进行修改
# - `build` 目录：编译输出，体积大，无需打包
# - `.gradle` 目录：包含项目本地缓存，不需要
# - `.idea` 等IDE配置：每个开发者环境不同
EXCLUDE_DIRS="--exclude='build/*' --exclude='.gradle/*' --exclude='.idea/*' --exclude='.vscode/*'"

# -----------------------------------------------------------------
# 4. 创建一个临时目录来准备打包文件
# -----------------------------------------------------------------
echo "正在创建临时打包目录..."
TEMP_DIR="project_package_temp"
rm -rf "$TEMP_DIR"
mkdir "$TEMP_DIR"

# 复制项目源码和核心文件
cp -r ./* "$TEMP_DIR/"
# 排除临时目录自身
rm -rf "$TEMP_DIR/$TEMP_DIR"

# 复制 Gradle 缓存中的相关依赖
echo "正在复制 Gradle 缓存中的依赖文件..."
rsync -a "$GRADLE_CACHE_DIR/modules-2" "$TEMP_DIR/.gradle/caches/"
rsync -a "$GRADLE_CACHE_DIR/jars-3" "$TEMP_DIR/.gradle/caches/"
rsync -a "$GRADLE_CACHE_DIR/transforms-3" "$TEMP_DIR/.gradle/caches/"

# -----------------------------------------------------------------
# 5. 打包成 .tar.gz 压缩文件
# -----------------------------------------------------------------
PACKAGE_NAME="project_with_deps_$(date +%Y%m%d%H%M%S).tar.gz"
echo "正在打包项目和依赖到文件：$PACKAGE_NAME..."

# 使用 tar 命令进行打包和压缩
tar -czf "$PACKAGE_NAME" -C "$TEMP_DIR" .

# 删除临时目录
rm -rf "$TEMP_DIR"

echo "================================================================="
echo "✅ 恭喜！项目和依赖已成功打包！"
echo "✅ 文件路径：$PACKAGE_NAME"
echo "请将此文件分享给你的团队成员，他们只需解压即可在本地进行开发。"
echo "================================================================="